# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2017-01-19 13:37
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('hardware_configuration', '0001_initial'),
        ('software_configuration', '0001_initial'),
        ('SSD', '0001_initial'),
        ('benchmarks', '0003_auto_20170119_1011'),
    ]

    operations = [
        migrations.CreateModel(
            name='SSDBenchL3Base',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rdmbps', models.DecimalField(decimal_places=10, max_digits=15, verbose_name='read speed (MB/s')),
                ('wrmbps', models.DecimalField(decimal_places=10, max_digits=15, verbose_name='write speed (MB/s')),
                ('rdiops', models.IntegerField(verbose_name='read IOPS')),
                ('wriops', models.IntegerField(verbose_name='write IOPS')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SSDBenchL3Metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='average file creations per second')),
                ('deletion', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='average file deletions per second')),
                ('cpu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3metadata', to='hardware_configuration.CPU', verbose_name='test bench cpu')),
                ('kernel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3metadata', to='software_configuration.LinuxKernel', verbose_name='test bench Linux kernel')),
                ('os', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3metadata', to='software_configuration.OS', verbose_name='test bench OS')),
                ('ssd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benchmarks_ssdbenchl3metadata', to='SSD.SSD')),
            ],
            options={
                'verbose_name': 'ssdbench_l3 metadata run',
                'verbose_name_plural': 'ssdbench_l3 metadata runs',
            },
        ),
        migrations.CreateModel(
            name='SSDBenchL3OLTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p99rd', models.IntegerField()),
                ('p99wr', models.IntegerField()),
                ('cpu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3oltp', to='hardware_configuration.CPU', verbose_name='test bench cpu')),
                ('kernel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3oltp', to='software_configuration.LinuxKernel', verbose_name='test bench Linux kernel')),
                ('os', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3oltp', to='software_configuration.OS', verbose_name='test bench OS')),
                ('ssd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benchmarks_ssdbenchl3oltp', to='SSD.SSD')),
            ],
            options={
                'verbose_name': 'ssdbench_l3 OLTP run',
                'verbose_name_plural': 'ssdbench_l3 OLTP runs',
            },
        ),
        migrations.CreateModel(
            name='SSDBenchL3Analytics',
            fields=[
                ('ssdbenchl3base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='benchmarks.SSDBenchL3Base')),
            ],
            options={
                'verbose_name': 'ssdbench_l3 analytics run',
                'verbose_name_plural': 'ssdbench_l3 analytics runs',
            },
            bases=('benchmarks.ssdbenchl3base',),
        ),
        migrations.CreateModel(
            name='SSDBenchL3BigBlock',
            fields=[
                ('ssdbenchl3base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='benchmarks.SSDBenchL3Base')),
            ],
            options={
                'verbose_name': 'ssdbench_l3 bigblock run',
                'verbose_name_plural': 'ssdbench_l3 bigblock runs',
            },
            bases=('benchmarks.ssdbenchl3base',),
        ),
        migrations.CreateModel(
            name='SSDBenchL3Checkpointing',
            fields=[
                ('ssdbenchl3base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='benchmarks.SSDBenchL3Base')),
            ],
            options={
                'verbose_name': 'ssdbench_l3 checkpointing run',
                'verbose_name_plural': 'ssdbench_l3 checkpointing runs',
            },
            bases=('benchmarks.ssdbenchl3base',),
        ),
        migrations.CreateModel(
            name='SSDBenchL3Db8kpage',
            fields=[
                ('ssdbenchl3base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='benchmarks.SSDBenchL3Base')),
            ],
            options={
                'verbose_name': 'ssdbench_l3 db8kpage run',
                'verbose_name_plural': 'ssdbench_l3 db8kpage runs',
            },
            bases=('benchmarks.ssdbenchl3base',),
        ),
        migrations.CreateModel(
            name='SSDBenchL3HFT',
            fields=[
                ('ssdbenchl3base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='benchmarks.SSDBenchL3Base')),
            ],
            options={
                'verbose_name': 'ssdbench_l3 HFT run',
                'verbose_name_plural': 'ssdbench_l3 HFT runs',
            },
            bases=('benchmarks.ssdbenchl3base',),
        ),
        migrations.AddField(
            model_name='ssdbenchl3base',
            name='cpu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3base', to='hardware_configuration.CPU', verbose_name='test bench cpu'),
        ),
        migrations.AddField(
            model_name='ssdbenchl3base',
            name='kernel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3base', to='software_configuration.LinuxKernel', verbose_name='test bench Linux kernel'),
        ),
        migrations.AddField(
            model_name='ssdbenchl3base',
            name='os',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks_ssdbenchl3base', to='software_configuration.OS', verbose_name='test bench OS'),
        ),
        migrations.AddField(
            model_name='ssdbenchl3base',
            name='ssd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benchmarks_ssdbenchl3base', to='SSD.SSD'),
        ),
    ]
